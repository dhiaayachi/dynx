#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /dev/stdout debug;

#pid        logs/nginx.pid;



events {
    worker_connections  1024;
}


http {
    lua_shared_dict locks 1m;
    lua_shared_dict cache_dict 1m;
    resolver 127.0.0.11 ipv6=off;
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    init_by_lua_block {
        runner = require 'luacov.runner'
        runner.tick = true
        runner.init({savestepsize = 3})
        jit.off()
    }
    server {
        listen       8888;
        server_name  route_config;   
        location /configure {
            content_by_lua_file /usr/local/openresty/site/lualib/dynx/upstream_config.lua;
        }
    }
    server {
        listen       80;
        server_name  dynamic_router;


        location / {
            set $rr_route '';
            set $rr_key '';
            set $rr_status 'NOTFOUND';
            rewrite_by_lua_file /usr/local/openresty/site/lualib/dynx/upstream_rewrite.lua;
            more_set_headers "X-RR-Key: $rr_key";
            more_set_headers "X-RR-State: $rr_status";
            more_set_headers "X-RR-Route: $rr_route";
            proxy_pass $rr_route$is_args$args;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
    }

}
